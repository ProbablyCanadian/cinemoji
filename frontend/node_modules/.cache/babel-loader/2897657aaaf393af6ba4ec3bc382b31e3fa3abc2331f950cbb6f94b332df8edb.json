{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Git\\\\test\\\\cinemoji\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n/*\nimport React, { useState } from \"react\";\n\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\n\nfunction App() {\n  const handleChange = (event) => {\n    console.log(event.target.value); // Access the value entered by the user\n  };\n  return (\n    \n    <div classname =\"App\">\n      <header className=\"App-header\">\n      \n\n      test i will kms if this doesnt work\n      \n        <div>\n          <label htmlFor=\"textbox\">Enter text:</label>\n          <input\n          type=\"text\"\n          id=\"textbox\"\n          onChange={handleChange} // Handle change event\n          placeholder=\"Type here...\"\n          />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleInputChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  const sendMessage = () => {\n    if (message.trim() !== '') {\n      alert('Message sent: ' + message); // You can replace this with your desired action to send the message\n      setMessage('');\n    } else {\n      alert('Please enter a message.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classname: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CineMoji \\uD83C\\uDFAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Movie Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your guess here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","handleInputChange","event","target","value","handleKeyPress","key","sendMessage","trim","alert","classname","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Program Files/Git/test/cinemoji/frontend/src/App.js"],"sourcesContent":["import './App.css';\n/*\nimport React, { useState } from \"react\";\n\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\n\nfunction App() {\n  const handleChange = (event) => {\n    console.log(event.target.value); // Access the value entered by the user\n  };\n  return (\n    \n    <div classname =\"App\">\n      <header className=\"App-header\">\n      \n\n      test i will kms if this doesnt work\n      \n        <div>\n          <label htmlFor=\"textbox\">Enter text:</label>\n          <input\n          type=\"text\"\n          id=\"textbox\"\n          onChange={handleChange} // Handle change event\n          placeholder=\"Type here...\"\n          />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/\n\nimport React, { useState } from 'react';\n\nfunction App() {\n    const [message, setMessage] = useState('');\n\n    const handleInputChange = (event) => {\n        setMessage(event.target.value);\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            sendMessage();\n        }\n    };\n\n    const sendMessage = () => {\n        if (message.trim() !== '') {\n            alert('Message sent: ' + message); // You can replace this with your desired action to send the message\n            setMessage('');\n        } else {\n            alert('Please enter a message.');\n        }\n    };\n\n    return (\n      <div classname =\"App\">\n          <header className=\"App-header\">\n                    <h2>CineMoji ðŸŽ¬</h2>\n                    <h3>Movie Name</h3>\n                    <input\n                        type=\"text\"\n                        value={message}\n                        onChange={handleInputChange}\n                        onKeyPress={handleKeyPress}\n                        placeholder=\"Type your guess here...\"\n                    />\n                    <button onClick={sendMessage}>Send</button>\n            </header>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACjCF,UAAU,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,cAAc,GAAIH,KAAK,IAAK;IAC9B,IAAIA,KAAK,CAACI,GAAG,KAAK,OAAO,EAAE;MACvBC,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC;EAED,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIR,OAAO,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBC,KAAK,CAAC,gBAAgB,GAAGV,OAAO,CAAC,CAAC,CAAC;MACnCC,UAAU,CAAC,EAAE,CAAC;IAClB,CAAC,MAAM;MACHS,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAE,KAAK;IAAAC,QAAA,eACjBf,OAAA;MAAQgB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACpBf,OAAA;QAAAe,QAAA,EAAI;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBpB,OAAA;QAAAe,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBpB,OAAA;QACIqB,IAAI,EAAC,MAAM;QACXb,KAAK,EAAEL,OAAQ;QACfmB,QAAQ,EAAEjB,iBAAkB;QAC5BkB,UAAU,EAAEd,cAAe;QAC3Be,WAAW,EAAC;MAAyB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACFpB,OAAA;QAAQyB,OAAO,EAAEd,WAAY;QAAAI,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAAClB,EAAA,CAtCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}